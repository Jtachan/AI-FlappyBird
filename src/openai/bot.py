"""Bot"""
import replicate
from pybase_ext import enum


class ClientRole(enum.StrEnum):
    """Enumeration containing the possible roles to use in the OpenAI client bot.

    Members
    -------
    SYSTEM :
        Delivers the system prompt overall task and tone.
    USER :
        Represents message by the user.
    ASSISTANT :
        Includes previous responses generated by the AI to maintain context.
    """
    SYSTEM = enum.auto()
    USER = enum.auto()
    ASSISTANT = enum.auto()


class ChatBot:
    def __init__(self, api_token: str):
        """
        Initializes the chatbot.

        Parameters
        ----------
        api_token : str
            Provided API token or key by Replicate. Users can generate it at:
            https://replicate.com/account
        """
        self._model = "meta/llama-2-70b-chat"
        self._client = replicate.Client(api_token=api_token)

        system_prompt = (
            "You are a helpful, respectful and honest assistant. "
            "Always answer as helpfully as possible, while being safe and adding a "
            "harmless joke with the response. Your answers should not include any "
            "harmful, unethical, racist, sexist, toxic, dangerous, or illegal content."
            " Please ensure that your responses are socially unbiased and positive "
            "in nature.\n\nIf a question does not make any sense, or is not factually"
            " coherent, explain why instead of answering something not correct. "
            "If you don't know the answer to a question, please don't share false "
            "information."
        )
        self._params = {
            "debug": False,
            "top_k": 50,
            "top_p": 1,
            "prompt": None,
            "temperature": 0.5,
            "system_prompt": system_prompt,
            "max_new_tokens": 500,
            "min_new_tokens": -1
        }

    def get_response(self, prompt: str):
        self._params["prompt"] = prompt
        response = self._client.run(
            self._model,
            input={
                "prompt": prompt,
                "system_prompt": self._params["system_prompt"]
            }
        )
        return "".join(response)

    @property
    def models(self):
        return self._client.models.list()


if __name__ == '__main__':
    bot = ChatBot()
    msg = "Can you write a poem about open source machine learning?"
    print(bot.get_response(msg))
